set -e

# 1) Ensure local branch is up to date with remote
# Pre-push hook receives remote name as $1
PUSH_REMOTE="${1:-origin}"
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

echo "🔍 Checking if local branch is up to date with $PUSH_REMOTE/$CURRENT_BRANCH..."

# Fetch latest from the remote being pushed to
git fetch "$PUSH_REMOTE" "$CURRENT_BRANCH" 2>/dev/null || true

# Compare local and remote commits
LOCAL=$(git rev-parse HEAD)
REMOTE=$(git rev-parse "$PUSH_REMOTE/$CURRENT_BRANCH" 2>/dev/null || echo "$LOCAL")

if [ "$LOCAL" != "$REMOTE" ]; then
  # Check if remote is ahead
  git merge-base --is-ancestor "$LOCAL" "$REMOTE" 2>/dev/null
  if [ $? -eq 0 ]; then
    echo "❌ Error: Remote branch has new commits. Please pull first:"
    echo "   git pull $PUSH_REMOTE $CURRENT_BRANCH"
    exit 1
  fi
fi

echo "✅ Branch is up to date with $PUSH_REMOTE"

# 2) Read latest commit message
COMMIT_MESSAGE=$(git log -1 --pretty=%B 2>/dev/null || echo "")

# 3) Allow skipping
if [ -n "$COMMIT_MESSAGE" ] && printf '%s' "$COMMIT_MESSAGE" | grep -qiE '\[(skip ci|ci skip)\]|skip ci'; then
  echo "🛑 Pre-push checks skipped because commit message contains [skip ci]."
  exit 0
fi

echo "⚡ Running turborepo lint and typecheck tasks..."
pnpm turbo run lint typecheck --parallel

# 3) Detect changed files vs upstream (robust on Windows/Git Bash)
UPSTREAM=$(git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null || echo "")
if [ -n "$UPSTREAM" ]; then
  CHANGED_FILES=$(git diff --name-only "$UPSTREAM"...HEAD 2>/dev/null || echo "")
else
  # Fallback: last commit range
  CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD 2>/dev/null || echo "")
fi

# 4) If SDK paths changed, run SDK tests
#    Use a regex that's safe with spaces by enumerating paths explicitly.
if printf '%s\n' "$CHANGED_FILES" | grep -qE '^(packages/sdks/js-ts|packages/types|packages/contracts)(/|$)'; then
  echo "🧪 SDK-related files changed. Running SDK test suite..."
  pnpm -C packages/sdks/js-ts test
else
  echo "✅ No SDK-related files changed. Skipping SDK tests."
fi
