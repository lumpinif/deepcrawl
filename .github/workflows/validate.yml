name: Validate

permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  TURBO_TELEMETRY_DISABLED: "1"

jobs:
  validate:
    name: Validate Workspace
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.19.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "pnpm"

      - name: Determine pnpm store path
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Compare against base branch
        if: github.event_name == 'pull_request'
        run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1

      - name: Summarize pending changesets
        if: github.event_name == 'pull_request'
        run: pnpm changeset status --since=origin/${{ github.event.pull_request.base.ref }}

      - name: Ensure SDK changes include changesets
        if: github.event_name == 'pull_request'
        run: node .github/ensure-sdk-changeset.mjs origin/${{ github.event.pull_request.base.ref }}

      - name: Run Biome checks
        run: pnpm exec biome ci . --reporter=github

      - name: Run ESLint (dashboard)
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ vars.TURBO_TEAM }}
        run: pnpm turbo run lint --filter=dashboard --no-daemon

      - name: Typecheck workspace
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ vars.TURBO_TEAM }}
        run: pnpm turbo run typecheck --no-daemon

      # - name: Run workspace tests
      #   env:
      #     TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      #     TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      #   run: pnpm turbo run test --no-daemon

      # - name: Run SDK tests
      #   run: pnpm -C packages/sdks/js-ts test

      - name: Build SDK package
        run: pnpm sdk-ts:build
